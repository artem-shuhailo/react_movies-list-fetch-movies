{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","query","setQuery","_useState5","_useState6","loading","setLoading","_useState7","_useState8","errorMessage","setErrorMessage","_Fragment","onSubmit","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Object","hasOwn","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","some","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f673de5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\n\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorMessage(false);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    if (query) {\n      setErrorMessage(false);\n\n      getMovie(query)\n        .then(response => {\n          if (Object.hasOwn(response, 'Error')) {\n            throw new Error();\n          }\n\n          const newMovie = response as MovieData;\n\n          setMovie({\n            title: newMovie.Title || 'No title',\n            description: newMovie.Plot || 'No description',\n            imgUrl: newMovie.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : newMovie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n            imdbId: newMovie.imdbID,\n          });\n        })\n        .catch(() => setErrorMessage(true))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': errorMessage,\n              })}\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', {\n                'is-light': !loading,\n                'is-loading': loading,\n              })}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=96d38dfd';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const added = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!added) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}